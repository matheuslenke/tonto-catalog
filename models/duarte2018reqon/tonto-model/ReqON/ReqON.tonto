import UFOC
import UFOB
import UFOA
import GORO

package ReqON

class Software_Item specializes Artifact 

class Document specializes Artifact 

class Requirement_Artifact specializes Information_Item, Information_Item, Simple_Artifact {
    [0..*] -- describes -- [1] Requirement 
    [1..*] -- [0..1] Requirement_Document 
}

class Program specializes Software_Item {
    [0..*] -- implements_ -- [1..*] Software_Function_Universal 
    [0..*] -- intends_to_satisfy -- [1..*] Requirement_Artifact 
    [0..1] -- intends_to_implement -- [1] Program_Specification 
    [1] -- materalization_of -- [0..*] Loaded_Program_Copy 
}

class Program_Specification specializes Document {
    [0..*] -- intends_to_satisfy -- [1..*] Requirement_Artifact 
    [0..*] -- describes -- [1..*] Software_Function_Universal 
}

class Functional_Requirement specializes Requirement {
    [0..*] -- refers_to -- [1] Software_Function_Universal 
}

class Software_Function_Universal specializes Function_Universal 

class Software_Function specializes Function {
    [0..*] -- instance_of -- [1..*] Software_Function_Universal 
}

class Loaded_Program_Copy specializes Disposition {
    [1] -- constituted_by -- [1..*] Software_Function 
    [0..*] -- inheres_in -- [1] Machine 
}

class Porgram_Copy_Execution specializes Event {
    [0..*] -- execution_of -- [1] Loaded_Program_Copy 
    [1] -- brings_about -- [1] Observable_State 
}

class Machine specializes Object 

class Controller specializes Machine {
    [1] -- participates_in -- [1..*] Porgram_Copy_Execution 
}

class Observable_State specializes Situation 

class Stakeholder specializes Agent {
    [0..*] -- responsible_for -- [0..*] Artifact 
}

class Hardgoal specializes Goal 

class Softgoal specializes Goal 

class Task specializes Action_Universal_Plan {
    [0..*] -- intends_to_operationalize -- [1] Requirement 
    [2..*] -- [0..1] Complex_Task 
}

class Atomic_Task specializes Task 

class Complex_Task specializes Task 

class Artifact specializes Object {
    @componentOf [2..*] -- [0..*] Composite_Artifact 
}

class Composite_Artifact specializes Artifact 

class Simple_Artifact specializes Artifact 

class Information_Item specializes Artifact, Artifact 

class FUnctional_Requirement specializes Requirement {
    [0..*] -- refers_to -- [1] Software_Function_Universal 
}

class Nonfunctional_Requirement specializes Requirement 

class Product_Quality_Requirement specializes Nonfunctional_Requirement {
    [0..*] -- refers_to -- [1] Quality_Characteristic 
}

class Quality_Characteristic specializes Quality_Universal 

class Requirement_Document specializes Document, Composite_Artifact 

class Stakeholder_Belief specializes Belief {
    [0..*] -- inheres_in -- [1..*] Requirements_Stakeholder 
}

class Assumption specializes Proposition {
    [1] -- propositional_content_of -- [1..*] Stakeholder_Belief 
    [1] -- got_from -- [1..*] Requirements_Stakeholder 
}

class Requirements_Stakeholder specializes Stakeholder {
    [1..*] -- interested_in -- [1..*] Requirement_Artifact 
}

class Requirements_Engineer specializes Stakeholder {
    [1..*] -- responsible_for -- [0..*] Requirement_Document 
}

class Stakeholder_Intention specializes Intention {
    [0..*] -- inheres_in -- [1..*] Requirements_Stakeholder 
}

class Requirement specializes Goal {
    [0..*] -- got_from -- [1..*] Requirements_Stakeholder 
    [1..*] -- propositional_content_of -- [1..*] Stakeholder_Intention 
}

genset mereological_structure_disjoint_complete {
    general Artifact
    specifics Composite_Artifact, Simple_Artifact
}

genset nature_disjoint_incomplete {
    general Artifact
    specifics Information_Item, Software_Item, Document
}

genset Vzv_6GGAqAAEQxl {
    general Nonfunctional_Requirement
    specifics Product_Quality_Requirement
}

