import Model
import Class
import Core

package Class_Member

subkind Method_Variable of functional-complexes  specializes Variable 

subkind Overridable_Method of functional-complexes  specializes Method_Member_Function {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind NonOverridable_Method of functional-complexes  specializes Method_Member_Function {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Class_Method of functional-complexes  specializes NonOverridable_Method, Concrete_Method {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Instance_Method of functional-complexes  specializes Concrete_Method {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Abstract_Method of functional-complexes  specializes Overridable_Method, Method_Member_Function {
    @componentOf 
    [0..*] -- [1] Extendable_Class 
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Concrete_Method of functional-complexes  specializes Method_Member_Function {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Generic_Method of functional-complexes  specializes Method_Member_Function {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Class_Variable of functional-complexes  specializes Attribute_Member_Variable {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Instance_Variable of functional-complexes  specializes Attribute_Member_Variable {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Parameter_Variabe of functional-complexes  specializes Method_Variable 

subkind Local_Variable of functional-complexes  specializes Method_Variable 

kind Type_Parameter

kind Block

subkind Constructor_Method of functional-complexes  specializes NonOverridable_Method, Instance_Method {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Destructor_Method of functional-complexes  specializes Instance_Method {
    @componentOf 
    [0..*] -- [1] Class 
}

subkind Accessor_Method of functional-complexes  specializes Instance_Method {
    @componentOf 
    [0..*] -- [1] Class 
}

