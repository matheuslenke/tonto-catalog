import PlatformOntology

package GDPO_Interaction

roleMixin Content_Consumer of functional-complexes  specializes Platform_User {
    @participation 
    [1..*] -- performed_by -- [0..*] Offline_Action 
    [*] -- [*] Review_Creation 
    @memberOf 
    [1..*] -- is_part_of -- [1..*] Target_Platform_User_Community 
    [1] -- can_initiate -- [0..1] User_Affiliation_Action 
}

event Platform_Supported_Interaction

roleMixin Content_Creator of functional-complexes  specializes Platform_User {
    @participation 
    [1..*] -- performed_by -- [0..*] Offline_Action 
    [*] -- [*] Review_Creation 
    @memberOf 
    [1..*] -- is_part_of -- [1..*] Target_Platform_User_Community 
    [1] -- can_initiate -- [0..1] User_Affiliation_Action 
}

kind Digital_Content

subkind Main_Digital_Content of functional-complexes  specializes Digital_Content 

event Main_Digital_Content_Creation specializes Digital_Content_Creation, User_Affiliation_Action, User_Action {
    @participation 
    [1..*] -- performed_by -- [1] Platform_User 
    @instantiation 
    [0..*] -- [1] User_Action_Type 
    [1..*] -- enables -- [1] Airbnb_Software 
    [1] -- enables -- [1..*] Platform_Software 
    @participation 
    [1] -- enables -- [1..*] Platform_Software 
}

subkind Personal_Data of functional-complexes  specializes Main_Digital_Content 

subkind Digital_Message of functional-complexes  specializes Main_Digital_Content 

subkind Digital_File of functional-complexes  specializes Main_Digital_Content 

event Platform_Supported_Communication

event Main_Digital_Content_Consumption specializes Digital_Content_Consumption, User_Action {
    @participation 
    [1..*] -- performed_by -- [1] Platform_User 
    @instantiation 
    [0..*] -- [1] User_Action_Type 
    [1..*] -- enables -- [1] Airbnb_Software 
    [1] -- enables -- [1..*] Platform_Software 
    @participation 
    [1] -- enables -- [1..*] Platform_Software 
}

