import Decentralized
import Airbnb
import Uber_eats
import MultiSided
import Price_set_by_Provider
import Price_Calculation
import Price_Discovery
import Payment
import Conversation_System
import Review_by_Customer
import Review_by_Provider
import Digital_Platform_Ontology
import Marketplace_business_models
import In_House_Payment
import Revenue_Stream
import Provider_Source
import Customer_Source
import GDPO_part_1
import GDPO_Interaction
import Registration

package Transaction

subkind Transaction  specializes User_Affiliation_Agreement, MS_User_Affiliation{
    @mediation
     [1..*] -- bounds_customer -- [1]  Platform_Customer( {const } )
    @mediation
     [1..*] -- is_bound_to -- [1]  Transaction_Platform_Company( {const } )
    @mediation
     [1..*] -- bounds_hired_provider --  [1..*]  Platform_Provider( {const } )
    [1] -- partially_fulfills --  [0..*]  Delivery
    @historicalDependence
     [0..*] -- conforms_to --  [1..*]  Offering_On_The_Platform( {const } )
    @componentOf
    [1]  -- is_part_of --<o>  [0..1]  Investment
    [1] -- [1]  Paid_Price
    [1] -- [1]  Transaction_Price
    [1] --  [0..*]  Transaction_Conversation
    [1] -- [1]  Highest_Price_Offer
     [0..*] -- confirms_to -- [1]  Listing
     [0..*] -- [1]  Fixed_Fee
}
relator Offering_On_The_Platform {
    @mediation
    [1] -- described_by -- [1]  Offering_Description( {const } )
    @mediation
     [1..*] -- offered_to -- [1]  Target_MS_Platform_Customer_Community( {const } )
    @mediation
     [0..*] -- mediated_by -- [1]  Transaction_Platform_Company( {const } )
    @mediation
     [1..*] -- offered_by -- [1]  Offering_Creator( {const } )
     [1..*] --  [1..*]  Price_set_by_Provider
     [0..*] --  [0..*]  Feature
}
subkind Offering_Description  specializes Main_Digital_Content
roleMixin Platform_Provider  specializes Platform_User, Offering_Creator{
    @memberOf
     [1..*]  -- is_part_of --<o>  [1..*]  MS_Platform_User_Side
    [1] -- does --  [0..*]  Review_Creation_by_Provider
     [1..*] -- by --  [1..*]  Revenue_Stream_Payed_by_Provider
}
event Offering_Creation  specializes Main_Digital_Content_Creation{
    @participation
     [1..*] -- is_performed_by -- [1]  Offering_Creator( {const } )
    @creation
    ( {const } )[1] -- created -- [1]  Offering_On_The_Platform( {const } )
    @creation
    ( {const } )[1] -- creates -- [1]  Offering_Description( {const } )
    @participation
     [1..*] -- performed_by -- [1]  Airbnb_Homeowner( {const } )
    @participation
     [0..*] -- performed_by -- [1]  Uber_Eats_Restaurant( {const } )
    @participation
     [0..*] -- performed_by -- [1]  Uber_Eats_Rider( {const } )
}
roleMixin Offering_Creator  specializes Platform_User, Content_Creator, MS_Platform_User, Registered_User{
    @memberOf
     [1..*]  -- is_part_of --<o>  [1..*]  MS_Platform_User_Side
    [1] --  [0..*]  Price_Proposal
    [1] -- participates --  [1..*]  Listing_Creation
    [1] -- changes --  [0..*]  Price_Setting_action_by_Provider
}
event Transaction_Creation  specializes User_Action, Platform_Supported_Interaction{
    @creation
    ( {const } )[1] -- creates -- [1]  Transaction( {const } )
    @participation
     [1..*] -- initiates -- [1]  Platform_Customer( {const } )
    @participation
     [1..*] -- accepted_by -- [1]  Platform_Provider( {const } )
    @participation
     [1..*] -- performed_by -- [1]  Airbnb_Home_Seeker( {const } )
    @participation
     [0..*] -- performed_by -- [1]  Uber_Eats_Customer( {const } )
}
roleMixin Target_Platform_Customer  specializes Platform_User, Platform_Visitor{
    @memberOf
     [1..*]  -- is_part_of --<o>  [1..*]  Target_MS_Platform_Customer_Community
    [*] -- suggests -- [*]  Suggested_Price
    [1] -- initiates --  [0..*]  Listing_Conversation
    @participation
    ( {const } )[1] --  [0..*]  Price_Offer_Creation( {const } )
    [1] --  [0..*]  Request_Quote
}
subkind Target_MS_Platform_Customer_Community  specializes Target_MS_Platform_User_Side{
    @subCollectionOf
     [0..*]  -- is_part_of --<o> [1]  Decentralized_Target_Platform_Customer_Community
}
roleMixin Platform_Customer  specializes Platform_User, Content_Consumer, MS_Platform_User, Registered_User, Target_Platform_Customer{
    @memberOf
     [1..*]  -- is_part_of --<o>  [1..*]  MS_Platform_User_Side
    [1] -- by --  [0..*]  Transaction_Payment
    [1] -- does --  [0..*]  Review_Creation_by_Customer
    [1] --  [1..*]  Price_Acceptance
    [1] -- by --  [0..*]  Inhouse_Payment
    [1] -- participates --  [1..*]  Transaction_Conversation
    [1] -- by --  [1..*]  Revenue_Stream_Payed_by_Customer
    [*] -- [*]  Paid_Transaction_Price
}
roleMixin Transaction_Platform_Company  specializes Platform_Company
event Delivery {
    @participation
     [0..*] -- received_by --  [1..*]  Platform_Customer( {const } )
}
event OuterPlatform_Delivery  specializes Delivery

