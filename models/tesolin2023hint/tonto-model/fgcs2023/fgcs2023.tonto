
package fgcs2023

kind EMWave

role Signal of functional-complexes  specializes EMWave 

kind Interface

role Receiver of functional-complexes  specializes Interface {
     --  Sender 
     -- decodesSignal --  WantedSignal 
     -- decodes --  WantedSender 
     -- monitors --  MonitoredSender 
     -- isServedBy --  SelectedSender 
}

role Sender of functional-complexes  specializes Interface {
     -- generates --  Signal 
}

kind FreeSpace

role Medium of functional-complexes  specializes FreeSpace 

mode DetectBond{
    @characterization [1] -- [1] Receiver 
    @externalDependence [*] -- [1..*] Signal 
    @externalDependence [*] -- [1..*] Medium 
}

role WantedSignal of functional-complexes  specializes Signal 

role UnWantedSignal of functional-complexes  specializes Signal 

role WantedSender of functional-complexes  specializes Sender, Sender 

mode Information{
    @characterization [1] -- [1] WantedSignal 
}

role SelectedSender of functional-complexes  specializes WantedSender 

role MonitoredSender of functional-complexes  specializes WantedSender 

mode DecodedBond specializes DetectBond {
    @externalDependence [*] -- [1..*] WantedSignal 
}

role MonitoredBond of intrinsic-modes  specializes DecodedBond 

role SelectedBond of intrinsic-modes  specializes DecodedBond {
    @characterization [1] -- [1] Receiver 
    @externalDependence [*] -- [1..*] SelectedSender 
}

role Source of functional-complexes  specializes Interface {
     -- handShakes --  Sink 
    @mediation [1..*] -- [1] HandShakeBond 
}

role Sink of functional-complexes  specializes Interface 

relator HandShakeBond{
    @mediation [1..*] -- [1] Sink 
     -- [2..*] SelectedBond 
}

class Interface2 of functional-complexes {
     -- standsIn --  TXIntfSituation 
     -- standsIn --  EMWIsGenerated 
     -- standsIn --  EMWIsDetected 
     -- standsIn --  RxIntfSituation 
}

class TXIntfSituation of situations {
    poweredOn: undefined  
    ableToTx: undefined  
    ableToRx: undefined  
    startAt: undefined  
    finishAt: undefined  
     --  EMField 
}

class EMField{
    [1] -- [1] Sender2 
    [1..*] -- [*] GenerateEMWave 
}

class Sender2 of functional-complexes  specializes Interface2 {
    [1] -- [1] GenerateEMWave 
    [1] -- generates -- [1] Signal2 
}

class GenerateEMWave of events {
    [1] -- [1] EMWIsGenerated 
}

class EMWIsGenerated of situations {
    startAt: undefined  
    finishAt: undefined  
     -- activates --  Permittivity 
}

class EMWave2 of functional-complexes {
    frequency: undefined  
    bandwidth: undefined  
    power: undefined  
     -- standsIn --  EMWIsGenerated 
    [1] -- [1] GenerateEMWave 
     --  EMWIsDetected 
}

class Permittivity{
    [1..*] -- [*] PropagateEMW 
    [1] -- [1] Medium2 
}

class FreeSpace2 of functional-complexes {
     -- standsIn --  EMWIsPropagated 
}

class PropagateEMW of events {
    [1] -- [1] EMWIsPropagated 
}

class EMWIsPropagated of situations {
    startAt: undefined  
    finishAt: undefined  
     --  EMWave2 
     -- activates --  Sensitivity 
}

class Sensitivity{
    [1..*] -- [*] DetectEMW 
}

class Receiver2 of functional-complexes  specializes Interface2 {
    [1] -- [1] Sensitivity 
     -- detectsSignal --  Signal2 
}

class DetectEMW of events {
    [1..*] -- [0..*] Receiver2 
    [1] -- [1] EMWIsDetected 
}

class EMWIsDetected of situations {
    startAt: undefined  
    finishAt: undefined  
}

class Signal2 of functional-complexes  specializes EMWave2 {
    [1..*] -- [0..*] PropagateEMW 
    [1..*] -- [0..*] DetectEMW 
}

class Medium2 of functional-complexes  specializes FreeSpace2 {
    [1..*] -- [0..*] PropagateEMW 
     -- propagates --  Signal2 
    [1..*] -- [0..*] DetectEMW 
}

class RxIntfSituation of situations {
    poweredOn: undefined  
    ableToTx: undefined  
    ableToRx: undefined  
    startAt: undefined  
    finishAt: undefined  
     -- activates --  Sensitivity 
}

genset intf {
    general Interface
    specifics Receiver, Sender
}

genset SgnRoles {
    general Signal
    specifics UnWantedSignal, WantedSignal
}

genset senderTypes {
    general WantedSender
    specifics SelectedSender, MonitoredSender
}

genset srcsnk {
    general Interface
    specifics Source, Sink
}

