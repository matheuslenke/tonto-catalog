package UFOS

category Agent 
relator Service_Offering {
    @sum
    ( {const } serviceoffering )[1] <o>--  [1..*]  Service_Offering_Claim( {const } )
    @sum
    ( {const } serviceoffering )[1] <o>--  [1..*]  Service_Offering_Commitment( {const } )
    @mediation
     [1..*] -- offered_to -- [1]  Target_Customer_Community( {const } community )
    @mediation
     [1..*] -- provides -- [1]  Service_Provider( {const } provider )
}
event Service_Offer {
    @formal
    ( {const } )[1] -- creates -- [1]  Service_Offering
}
category Service_Offering_Description {
    @formal
     [0..*] -- describes -- [1]  Service_Offering
}
roleMixin Target_Customer  specializes Agent{
    @memberOf
     [1..*]  --<o>  [1..*]  Target_Customer_Community
}
collective Target_Customer_Community 
roleMixin Service_Provider  specializes Agent
mode Service_Offering_Commitment {
    @characterization
     [1..*] -- inheres_In -- [1]  Service_Provider( {const } provider )
    @externalDependence
     [1..*] -- [1]  Target_Customer_Community( {const } )
}
mode Service_Offering_Claim {
    @characterization
     [1..*] -- inheres_In -- [1]  Target_Customer_Community( {const } )
    @externalDependence
     [1..*] -- [1]  Service_Provider( {const } provider )
    @formal
    ( {const } )[1] -- is_counterpart_of -- [1]  Service_Offering_Commitment( {const } )
}
event Service_Negotiation {
    @formal
    ( {const } servicenegotiation )[1] -- results_in --  [0..1]  Service_Agreement
    @formal
     [0..*] -- regards_to -- [1]  Service_Offering
}
category Service_Agreement_Description {
    @formal
     [0..*] -- describes --  [1..*]  Service_Agreement
}
roleMixin Hired_Service_Provider  specializes Service_Provider_On_Negotiation{
    @participation
    ( {const } provider )[1] --  [0..*]  Hired_ProviderCustomer_Interaction
}
roleMixin Service_Customer  specializes Target_Customer_On_Negotiation{
    @participation
    ( {const } customers ) [1..*] --  [0..*]  Hired_ProviderCustomer_Interaction
}
relator Service_Agreement {
    @mediation
     [1..*] -- is_bound_to -- [1]  Hired_Service_Provider( {const } )
    @mediation
     [1..*] -- is_bound_to --  [1..*]  Service_Customer( {const } )
    @formal
     [0..*] -- conforms_to -- [1]  Service_Offering
    @sum
    ( {const } serviceagreement )[1] <o>--  [1..*]  Hired_Provider_Commitment( {const } )
    @sum
    ( {const } serviceagreement )[1] <o>--  [1..*]  Service_Customer_Claim( {const } )
}
mode Hired_Provider_Commitment {
    @characterization
     [1..*] -- inheres_in -- [1]  Hired_Service_Provider( {const } hiredprovider )
    @externalDependence
     [1..*] -- [1]  Service_Customer( {const } servicecustomer )
}
mode Hired_Provider_Claim {
    @formal
    ( {const } )[1] -- is_counterpart_of -- [1]  Service_Customer_Commitment( {const } claim )
    @characterization
    [1] -- inheres_in -- [1]  Claimed_Hired_Provider( {const } cl_hiredprovider )
    @externalDependence
     [1..*] -- [1]  Committed_Service_Customer( {const } co_servicecustomer )
}
mode Service_Customer_Claim {
    @formal
    ( {const } claim )[1] -- is_counterpart_of -- [1]  Hired_Provider_Commitment( {const } )
    @characterization
     [1..*] -- inheres_in -- [1]  Service_Customer( {const } servicecustomer )
    @externalDependence
     [1..*] -- [1]  Hired_Service_Provider( {const } hiredprovider )
}
mode Service_Customer_Commitment {
    @characterization
     [1..*] -- inheres_in -- [1]  Committed_Service_Customer( {const } co_servicecustomer )
    @externalDependence
     [1..*] -- [1]  Claimed_Hired_Provider( {const } cl_hiredprovider )
}
event Service_Delivery {
    @formal
     [0..*] -- related_to -- [1]  Service_Agreement
}
event Hired_Provider_Action {
    @sum
     [0..*]  --<o> [1]  Service_Delivery( {const } )
    @formal
     [0..*] -- motivated_by --  [1..*]  Hired_Provider_Commitment
    @formal
     [0..*] -- performed_by -- [1]  Hired_Service_Provider
}
event Customer_Action {
    @sum
     [0..*]  --<o> [1]  Service_Delivery( {const } )
    @formal
     [0..*] -- motivated_by --  [1..*]  Service_Customer_Commitment( {const } )
    @formal
     [0..*] -- performed_by -- [1]  Committed_Service_Customer
}
event Hired_ProviderCustomer_Interaction {
    @sum
     [0..*]  --<o> [1]  Service_Delivery( {const } )
    @formal
     [0..*] -- motivated_by --  [0..*]  Service_Customer_Commitment( {const } customer_commitments )
    @formal
     [0..*] -- motivated_by --  [0..*]  Hired_Provider_Commitment( {const } provider_commitments )
}
relator Specialized_Service_Agreement  specializes Service_Agreement{
    @sum
    ( {const } s_serviceagreement )[1] <o>--  [1..*]  Hired_Provider_Claim( {const } )
    @sum
    ( {const } s_serviceagreement )[1] <o>--  [1..*]  Service_Customer_Commitment( {const } )
    @mediation
     [1..*] -- is_bound_to -- [1]  Committed_Service_Customer( {const } )
    @mediation
     [1..*] -- is_bound_to -- [1]  Claimed_Hired_Provider( {const } )
}
roleMixin Committed_Service_Customer  specializes Service_Customer
roleMixin Claimed_Hired_Provider  specializes Hired_Service_Provider
roleMixin Target_Customer_On_Negotiation  specializes Target_Customer{
    @participation
    ( {const } customers ) [1..*] --  [1..*]  Service_Negotiation( {const } )
}
roleMixin Service_Provider_On_Negotiation  specializes Service_Provider{
    @participation
    ( {const } provider )[1] --  [1..*]  Service_Negotiation
}

