import project

package Model

role tourist of functional-complexes  specializes user 

relator certification

kind cultural_visit specializes activity 

kind sport_activity specializes activity 

kind food_and_wine_tour specializes activity 

role Tourist_Guide of functional-complexes  specializes user 

category location of functional-complexes  specializes path {
    touristAttraction: undefined  
    adress: Adress  
    how_to_arrive: string_  
    [1] -- compose -- [1] itinerary 
}

kind user

category activity of functional-complexes 

relator booking

subkind museum_visit of functional-complexes  specializes cultural_visit 

subkind city_center_visit of functional-complexes  specializes cultural_visit 

subkind church_visit of functional-complexes  specializes cultural_visit 

subkind castel_visit of functional-complexes  specializes cultural_visit 

subkind Winery_visit of functional-complexes  specializes food_and_wine_tour 

subkind resturant_visit of functional-complexes  specializes food_and_wine_tour 

subkind Hiking of functional-complexes  specializes sport_activity 

subkind Cycling of functional-complexes  specializes sport_activity 

subkind Climbing of functional-complexes  specializes sport_activity 

subkind Skiing of functional-complexes  specializes sport_activity 

role language_certificate of relators  specializes certification {
    language: string_  
    @mediation 
    [0..*] -- [1] itinerary 
    @mediation 
    [1..*] -- [1] Tourist_Guide 
    [1..*] -- need -- [1..*] plan 
    @derivation 
    [1] -- [1] certification 
}

role activity_certificate of relators  specializes certification {
    @mediation 
    [0..*] -- [1] itinerary 
    @mediation 
    [1..*] -- [1] Tourist_Guide 
    [1..*] -- need -- [1..*] plan 
    @derivation 
    [1] -- [1] certification 
}

kind payment

phase completed of relators  specializes booking {
    @material 
    [1..*] -- [1] offer 
    @mediation 
    [1..*] -- [1] tourist 
    @derivation 
    [1] -- one -- [1] booking 
}

phase being_processed of relators  specializes booking {
    @material 
    [1..*] -- [1] offer 
    @mediation 
    [1..*] -- [1] tourist 
    @derivation 
    [1] -- one -- [1] booking 
}

role paid of relators  specializes completed {
    @material 
    [1..*] -- [1] offer 
    @mediation 
    [1..*] -- [1] tourist 
    @derivation 
    [1] -- one -- [1] booking 
}

subkind online_payment of functional-complexes  specializes payment 

subkind creditdebit_card_payment of functional-complexes  specializes payment 

kind receipt

kind itinerary{
    duration: long  
    title: string_  
    price: float  
}

quality offer{
    identifier: long  
    language: string_  
    date: long  
    starting_time: long  
}

relator feedback

relator plan

category path of functional-complexes {
    points: point  
    starting_point: Adress  
    end_point: Adress  
}

quality geometry{
    coordinate: Point [1..*] 
}

subkind Point of qualities  specializes geometry {
    @characterization 
    [1..*] -- [1] path 
}

subkind Multi_point of qualities  specializes geometry {
    @characterization 
    [1..*] -- [1] path 
}

subkind Line_String of qualities  specializes geometry {
    @characterization 
    [1..*] -- [1] path 
}

subkind Multi_Line_String of qualities  specializes geometry {
    @characterization 
    [1..*] -- [1] path 
}

phase finish of qualities  specializes offer 

phase in_progres of qualities  specializes offer 

phase planed of qualities  specializes offer 

enum Adress{
street,ciy,distric,zip_code}

enum time{
year,month,day,hours,minute}

enum point{
latitude,longitude}

