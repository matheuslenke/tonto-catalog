import GI2MO_Ontology

package Gi2MO_Refactored

phase Accepted of functional-complexes  specializes Idea 

role Access_Authorized_Group of collectives  specializes User_Group 

relator Account_Ownership{
    @mediation [1..*] -- [1] Online_Account 
    @mediation [1..*] -- [1] User_with_Account 
}

relator Authorization{
    @mediation [1..*] -- [1] Access_Authorized_Group 
    @mediation [1..*] -- [1] Contest_with_Access_Authorization 
}

type Category

role Commented_Contest of functional-complexes  specializes Idea_Contest 

role Contest_with_Access_Authorization of functional-complexes  specializes Idea_Contest {
    @material [1..*] -- [1..*] Access_Authorized_Group 
}

role Contest_with_Idea of functional-complexes  specializes Idea_Contest 

relator Creation{
    @mediation [1..*] -- [1] Idea 
    @mediation [1..*] -- [1..*] User_with_Idea 
}

phase Deployed of functional-complexes  specializes Idea 

role Described of functional-complexes  specializes Idea 

role Describee of functional-complexes  specializes Idea {
    @material [1..*] -- [1..*] Described 
}

relator Describes_Part{
    @mediation [1..*] -- [1] Described 
    @mediation [1..*] -- [1] Describee 
}

phase Draft of functional-complexes  specializes Idea 

relator Edited{
    VersionDate: undefined [1] 
    @mediation [1..*] -- [1] Updated_Contest 
    @mediation [1..*] -- [1] User_Editor 
}

kind Idea{
    Description: undefined [1] 
    @formal [0..*] -- Has_equal_content -- [0..*] Idea 
}

mode Idea_Attachment{
    [0..*] -- [1] Idea 
}

type Idea_Category specializes Category {
    [1..*] -- [0..*] Idea 
}

relator Idea_Comment{
    @mediation [1..*] -- [1] User_with_Comment 
    @mediation [1..*] -- [1] Idea_with_a_Comment 
}

kind Idea_Contest

mode Idea_Contest_Attachment{
    @characterization [0..*] -- [1] Idea_Contest 
}

relator Idea_Contest_Comment{
    @mediation [1..*] -- [1] Commented_Contest 
    @mediation [1..*] -- [1] User_with_Idea_Contest_Comment 
}

relator Idea_Relationship{
    @mediation [1..*] -- [1..*] Related_Idea 
    @mediation [1..*] -- [1..*] Relatee 
}

role Idea_Updater_User of functional-complexes  specializes User 

role Idea_with_a_Comment of functional-complexes  specializes Idea 

phase Implemented of functional-complexes  specializes Idea 

role Merged of functional-complexes  specializes Idea 

role Merged_1 of functional-complexes  specializes Idea {
    [1..*] -- [1..*] Merged 
}

relator Merging{
    @mediation [1..*] -- [1..*] Merged 
    @mediation [1..*] -- [merged_1s] Merged_1 
}

kind Online_Account

phase Partially_Implemented of functional-complexes  specializes Idea 

relator Rating_Review specializes Review 

relator Read_Authorization specializes Authorization 

phase Rejected of functional-complexes  specializes Idea 

role Related_Idea of functional-complexes  specializes Idea 

role Relatee of functional-complexes  specializes Idea 

relator Review{
    @mediation [1..*] -- [1] Revised_Idea 
    @mediation [1..*] -- [1] Reviewer 
}

type Review_Category specializes Category {
    [1..*] -- [0..*] Review 
}

mode Review_Rating{
    @characterization [0..1] -- [1] Rating_Review 
}

role Reviewer of functional-complexes  specializes User 

role Revised_Idea of functional-complexes  specializes Idea {
    @material [1..*] -- [1..*] Reviewer 
}

role Similar_Idea of functional-complexes  specializes Idea 

role Similaree of functional-complexes  specializes Idea {
    @material [1..*] -- [1..*] Similar_Idea 
}

relator Similarity{
    @mediation [1..*] -- [1..*] Similar_Idea 
    @mediation [1..*] -- [1..*] Similaree 
}

type SubCategory specializes Category {
    [0..*] -- subcategory_of -- [1..*] Category 
}

relator Submission{
    @mediation [1..*] -- [1] Contest_with_Idea 
    @mediation [1..*] -- [1] Submitting_User 
    @mediation [1..*] -- [1] Submitted_Idea 
}

mode Submited_by_Method{
    @characterization [1] -- [1] Submission 
}

role Submitted_Idea of functional-complexes  specializes Idea 

role Submitting_User of functional-complexes  specializes User {
    @material [1..*] -- [1..*] Submitted_Idea 
}

relator Textual_Review specializes Review 

relator Update_Idea{
    @mediation [1..*] -- [1] Idea_Updater_User 
    @mediation [1..*] -- [1] Updated_Idea 
}

role Updated_Contest of functional-complexes  specializes Idea_Contest 

role Updated_Idea of functional-complexes  specializes Idea {
    @material [1..*] -- [1..*] Idea_Updater_User 
}

kind User

role User_Editor of functional-complexes  specializes User {
    @material [1..*] -- [1..*] Updated_Contest 
}

collective User_Group

collective User_Group_in_a_Group specializes User_Group {
    @subCollectionOf [0..*] -- [1] User_Group 
}

role User_in_a_Group of functional-complexes  specializes User {
    @memberOf [2..*] -- [1] User_Group 
}

role User_with_Account of functional-complexes  specializes User {
    @material [1..*] -- [1..*] Online_Account 
}

role User_with_Comment of functional-complexes  specializes User {
    @material [1..*] -- [1..*] Idea_with_a_Comment 
}

role User_with_Idea of functional-complexes  specializes User 

role User_with_Idea_Contest_Comment of functional-complexes  specializes User {
    @material [1..*] -- [1..*] Commented_Contest 
}

relator Write_Authorization specializes Authorization 

datatype Metric
datatype MinMax_Rating_Range
datatype Rating_Range
datatype Submission_Method
datatype Up_Down_Rating_Range
genset sXzpCH6AUBgIKiEY {
    general Idea
    specifics Merged_1, Merged
}

genset xTmZCH6AUBgIKiGk {
    general Idea
    specifics Relatee, Related_Idea
}

genset J7s5CH6AUBgIKiIv {
    general Idea
    specifics Similaree, Similar_Idea
}

genset OVI1CH6AUBgIKibY {
    general Authorization
    specifics Read_Authorization, Write_Authorization
}

genset JKnDCH6AUBgIKigM {
    general Idea
    specifics Draft, Rejected, Implemented, Partially_Implemented, Deployed, Accepted
}

genset acATCH6AUBgIKijT {
    general Rating_Range
    specifics MinMax_Rating_Range, Up_Down_Rating_Range
}

genset fkCTCH6AUBgIKikG {
    general Review
    specifics Textual_Review, Rating_Review
}

