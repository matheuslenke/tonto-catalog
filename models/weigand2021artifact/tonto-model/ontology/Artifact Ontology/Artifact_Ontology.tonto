package Artifact_Ontology

historicalRoleMixin Maker  specializes Agent{
    @participation
    ( {const } ) [1..*] --  [0..*]  Testing
    @participation
    ( {const } ) [1..*] --  [1..*]  Making
}
category Agent 
mode Intention {
    @characterization
    [1] -- [1]  Maker( {const } )
    @manifestation
    ( {const } ) [1..*] --  [0..*]  Making
    @manifestation
    ( {const } ) [1..*] --  [0..*]  Testing
}
event Testing {
    @historicalDependence
     [0..*] -- [1]  Making( {const } )
}
event Making {
    @instantiation
     [0..*] --  [1..*]  Make_process
}
historicalRoleMixin Source  specializes Physical_Object{
    @participation
    ( {const } ) [1..*] --  [0..*]  Making
}
category Physical_Object 
roleMixin Result  specializes Physical_Object{
    @creation
    ( {const } ) [1..*] --  [1..*]  Making( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  Testing
}
roleMixin Technical_object  specializes Result, Instrument{
    @creation
    ( {const } )[1] -- [1]  Testing( {const } )
}
quality Capacity {
    @characterization
     [1..*] -- Attributed_Capacities -- [1]  Technical_object( {const } )
}
historicalRoleMixin User  specializes Agent
event Usage {
    @participation
    ( {const } ) [1..*] --  [1..*]  User( {const } )
    @historicalDependence
     [1..*] -- [1]  Usage_condition( {const } )
    @bringsAbout
    ( {const } ) [1..*] --  [1..*]  Usage_effect( {const } )
}
situation Usage_condition {
    @instantiation
     [0..*] -- satisfies --  [1..*]  Practice
}
event Using {
    @historicalDependence
     [1..*] -- [1]  Use_condition( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  User( {const } )
    @bringsAbout
    ( {const } ) [1..*] -- [1]  Use_effect( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  Instrument( {const } )
    @manifestation
    ( {const } ) [1..*] --  [1..*]  Capacities( {const } )
    @componentOf
     [1..*]  --<o>  [0..*]  Usage
    @instantiation
     [0..*] -- [1]  Use_process
}
situation Use_condition {
    @instantiation
     [0..*] -- satisfies --  [1..*]  Field
}
class Field (instanceOf Use_condition) specializes Proposition
quality Capacities {
    @characterization
     [1..*] -- Attributed_Capactities --  [1..*]  Technical_object( {const } )
    @instantiation
     [0..*] -- satisfies --  [0..*]  Make_goal
}
roleMixin Instrument {
    @characterization
    ( {const } ) [1..*] --  [1..*]  Capacities( {const } )
}
event Observation 
roleMixin Material_source  specializes Instrument
class Proposition of abstract-individuals
class Practice (instanceOf Usage_condition) specializes Proposition
situation Usage_effect 
situation Use_effect {
    @instantiation
     [0..*] -- satisfies --  [0..*]  Use_goal
}
historicalRoleMixin Designer  specializes Agent
phaseMixin Planned  specializes Technical_object
phaseMixin In_production  specializes Technical_object{
    @historicalDependence
     [0..*] -- [1]  Planned( {const } )
}
phaseMixin Employed  specializes Technical_object{
    @historicalDependence
     [0..*] -- [1]  In_production( {const } )
}
phaseMixin Disposed  specializes Technical_object{
    @historicalDependence
     [0..*] -- [1]  Employed( {const } )
}
phaseMixin In_distribution  specializes Employed
phaseMixin In_use  specializes Employed
phaseMixin In_maintenance  specializes Employed
event Design_conversation {
    @creation
    ( {const } ) [1..*] --  [1..*]  Design_object( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  Maker( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  Designer( {const } )
    @participation
    ( {const } ) [1..*] --  [1..*]  User( {const } )
}
category Object_Description  specializes Normative_Description
category Normative_Description 
category Plan_Description  specializes Normative_Description
type Artifact_variant  specializes Artifact_universal
category Design_object  specializes Object_Description{
    @material
     [1..*] --  [1..*]  Artifact_universal
}
type Artifact_universal (instanceOf Artifact)
category Artefact_design  specializes Plan_Description{
    @material
    [1] -- identifies -- [1]  Artifact_universal
    [1] <o>--  [1..*]  Use_plan
}
roleMixin Artifact  specializes Technical_object{
    @instantiation
     [1..*] -- conforms_to -- [1]  Artifact_universal
}
type Capacity_universal 
class Make_goal (instanceOf Capacities) specializes Capacity_universal
category Make_plan {
    @material
     [1..*] -- goal --  [1..*]  Make_goal
    @material
     [0..*] -- describes --  [0..*]  Make_process
     [1..*]  --<o> [1]  Artefact_design
}
type Make_process (instanceOf Making) specializes Complex_Action_Universal
category Use_plan {
    @material
    [1] -- describes -- [1]  Use_process
    @material
     [1..*] -- goal --  [1..*]  Use_goal
}
class Use_goal (instanceOf Use_effect) specializes Proposition
type Complex_Action_Universal 
event Directive_actagenic  specializes Communicative_acts
type Use_process (instanceOf Using) specializes Complex_Action_Universal
event Communicative_acts {
    @componentOf
     [1..*]  --<o> [1]  Design_conversation
    @historicalDependence
     [0..*] -- warrant --  [1..*]  Observation( {const } )
}
event Assertive_factagenic  specializes Communicative_acts

