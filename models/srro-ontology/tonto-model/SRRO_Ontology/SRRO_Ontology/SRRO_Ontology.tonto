
package SRRO_Ontology

kind Project

category Artifact of functional-complexes 

kind TestCase specializes Artifact 

kind EntityType specializes Artifact 

kind UseCase specializes Artifact {
    description: undefined  
    identifier: undefined  
}

kind Module specializes Artifact 

kind Requirement specializes Artifact 

subkind NonFunctionalRequirement of functional-complexes  specializes Requirement {
    [0..*] -- dependsOn -- [0..*] Requirement 
    [0..*] -- conflictsWith -- [0..*] Requirement 
}

subkind FunctionalRequirement of functional-complexes  specializes Requirement {
    [0..*] -- dependsOn -- [0..*] Requirement 
    [0..*] -- conflictsWith -- [0..*] Requirement 
}

subkind BusinessRule of functional-complexes  specializes Requirement {
    [0..*] -- dependsOn -- [0..*] Requirement 
    [0..*] -- conflictsWith -- [0..*] Requirement 
}

subkind Class of functional-complexes  specializes EntityType {
    [0..*] -- usedIn -- [0..*] UseCase 
}

role RequirementTestCase of functional-complexes  specializes TestCase 

role UseTestCase of functional-complexes  specializes TestCase 

role ClassTestCase of functional-complexes  specializes TestCase 

mode EventFlow

mode BasicFlow specializes EventFlow {
    [1..*] -- [0..*] Precondition 
}

mode AlternativeFlow specializes EventFlow {
    [1..*] -- [0..*] Precondition 
}

kind Condition

role Postcondition of functional-complexes  specializes Condition 

role Precondition of functional-complexes  specializes Condition 

