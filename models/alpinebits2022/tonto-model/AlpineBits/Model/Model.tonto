
package Model

relator Event_Plan specializes Named_Entity {
    start_date: Time_Instant  
    end_date: Time_Instant  
    inperson_capacity: int  
    online_capacity: int  
    participation_url: string_  
    registration_url: string_  
    recorded: boolean_  
}

phase Cancelled of relators  specializes Event_Plan 

category Agent specializes Named_Entity {
    contact_points: Contact_Point [1..*] 
}

roleMixin Organizer specializes Agent 

kind Person specializes Agent 

kind Organization specializes Agent 

roleMixin Sponsor specializes Agent 

subkind Composite_Event of relators  specializes Event_Plan 

subkind Simple_Event of relators  specializes Event_Plan 

roleMixin Contributor specializes Agent 

roleMixin Publisher specializes Agent 

category Geospatial_Feature{
    area: int  
    length: int  
    max_altitude: int  
    min_altitude: int  
}

kind Image_Object specializes Media_Object {
    height: int  
    width: int  
}

kind Video_Object specializes Media_Object {
    height: int  
    width: int  
    duration: Time_Interval  
}

category Media_Object of functional-complexes  specializes Named_Entity {
    content_type: string_  
}

subkind Event_Plan_Category specializes Category 

roleMixin Venue of functional-complexes  specializes Place 

quality Geometry{
    coordinate: Coordinate [1..*] 
}

subkind Polygon of qualities  specializes Geometry 

subkind Line_String of qualities  specializes Geometry 

subkind Point of qualities  specializes Geometry 

category Place of functional-complexes  specializes Geospatial_Feature, Named_Entity {
    address: Address  
    how_to_arrive: string_  
    opening_hours: Hours_Specification [1..*] 
}

subkind Event_Series specializes Event_Plan_Category, Named_Entity {
    frequency: undefined  
}

kind Lift specializes Place, Named_Entity {
    capacity: int  
    persons_per_chair: int  
}

kind Trail specializes Place 

category Named_Entity{
    abstract: string_  
    description: string_  
    name: string_  
    short_name: string_  
    url: string_  
}

subkind Snowpark of functional-complexes  specializes Trail, Named_Entity 

kind Mountain_Area specializes Place, Named_Entity 

subkind Lift_Category specializes Category 

subkind Trail_Category specializes Category 

subkind Snowpark_Feature of types  specializes Feature 

relator Snow_Measurement specializes Geospatial_Feature {
    obtained_in: Time_Instant  
    base_snow: int  
    base_snow_range: undefined  
    storm_total: int  
    snow_over_night: int  
    groomed: boolean_  
    snow_making: boolean_  
}

type Snow_Type

phaseMixin Operational of functional-complexes  specializes Place 

phaseMixin Closed of functional-complexes  specializes Place 

phaseMixin Permanently_Closed of functional-complexes  specializes Place 

roleMixin Area_Owner specializes Agent 

subkind Composite_Area of functional-complexes  specializes Mountain_Area 

subkind SimpleArea of functional-complexes  specializes Mountain_Area 

subkind Ski_Slope of functional-complexes  specializes Trail, Named_Entity 

kind Audio_Object specializes Media_Object {
    duration: Time_Interval  
}

type License_Type

roleMixin License_Holder specializes Agent 

subkind Media_Object_Category specializes Category 

subkind MultiPoint of qualities  specializes Geometry 

subkind Multi_Line_String of qualities  specializes Geometry 

subkind MultiPolygon of qualities  specializes Geometry 

phase Published of relators  specializes Event_Plan 

subkind Mountain_Area_Category specializes Category 

quality Difficulty

type Category specializes Named_Entity 

type Feature specializes Named_Entity 

roleMixin Author of functional-complexes  specializes Agent 

subkind Ski_Slope_Category specializes Category 

subkind Snowpark_Category specializes Category 

subkind Event_Series_Category of types  specializes Category 

phase Virtual_Event of functional-complexes  specializes Event_Plan 

phase InPerson_Event of functional-complexes  specializes Event_Plan 

phase Hybrid_Event of functional-complexes  specializes Event_Plan 

kind Streaming_Platform

collective Target_Audience

datatype Contact_Point{
telephone,email,address,available_hours
}

datatype Hours_Specification{
opens,closes,day_of_week,valid_from,valid_to
}

datatype Coordinate{
longitude,latitude,elevation
}

datatype Address{
street,city,region,country,category_,zipcode,complement
}

datatype Time_Instant
datatype Time_Interval
datatype Time
datatype Frequency
datatype Range{
lower,upper
}

enum EU_Difficulty{
    Novice, Beginner, Intermediate, Expert
}
enum US_Difficulty{
    Beginner, Beginner_Intermediate, Intermediate, Intermediate_Advanced, Advanced, Expert, TerrainPark
}
enum Snowpark_Difficulty{
    S, M, L, XL
}
enum Day_of_Week{
    Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday
}
genset Agent_Type {
    general Agent
    specifics Organization, Person
}

genset Object_Type {
    general Media_Object
    specifics Image_Object, Video_Object, Audio_Object
}

genset Event_Status {
    general Event_Plan
    specifics Cancelled, Published
}

genset Event_Structure {
    general Event_Plan
    specifics Simple_Event, Composite_Event
}

genset Geometry_Type {
    general Geometry
    specifics MultiPoint, Polygon, Point, Multi_Line_String, Line_String, MultiPolygon
}

genset Trail_Type {
    general Trail
    specifics Snowpark, Ski_Slope
}

genset Place_Type {
    general Place
    specifics Lift, Mountain_Area, Trail
}

genset Place_Structure {
    general Mountain_Area
    specifics Composite_Area, SimpleArea
}

genset Operational_Status {
    general Place
    specifics Permanently_Closed, Operational
}

genset Event_Attendance {
    general Event_Plan
    specifics InPerson_Event, Hybrid_Event, Virtual_Event
}






































