package Model

relator Event_Plan  specializes Named_Entity{
    start_date : Time Instant
    end_date : Time Instant
    inperson_capacity : int
    online_capacity : int
    participation_url : string
    registration_url : string
    recorded : boolean
    @mediation
     [1..*] --  [1..*]  Organizer( {const } organizer )
    @material
     [1..*] -- [*]  Sponsor
    @material
     [1..*] -- [*]  Contributor
    @material
     [1..*] -- [1]  Publisher
    @material
     [1..*] --  [1..*]  Venue
    @instantiation
    [*] --  [0..1]  Event_Series( {derived } series )
    @instantiation
    [*] --  [0..*]  Event_Plan_Category( {derived } category )
    @material
     [0..*] --  [0..*]  Streaming_Platform
    @mediation
     [0..*] -- [1]  Target_Audience( {const } )
}
phase Cancelled  specializes Event_Plan
category Agent  specializes Named_Entity{
    contact_points : Contact Point [1..*] 
}
roleMixin Organizer  specializes Agent
kind Person  specializes Agent
kind Organization  specializes Agent
roleMixin Sponsor  specializes Agent
subkind Composite_Event  specializes Event_Plan{
    [*] <>--  [2..*]  Event_Plan
}
subkind Simple_Event  specializes Event_Plan
roleMixin Contributor  specializes Agent
roleMixin Publisher  specializes Agent
category Geospatial_Feature {
    area : int
    length : int
    max_altitude : int
    min_altitude : int
}
kind Image_Object  specializes Media_Object{
    height : int
    width : int
}
kind Video_Object  specializes Media_Object{
    height : int
    width : int
    duration : Time Interval
}
category Media_Object  specializes Named_Entity{
    content_type : string
    @historicalDependence
    ( {const } multimedia_description )[*] -- [*]  Named_Entity
    @instantiation
    [*] --  [0..*]  Media_Object_Category( {derived } category )
    @material
    [*] --  [0..1]  License_Type
    @material
     [1..*] --  [0..1]  License_Holder
    @material
     [1..*] --  [0..1]  Author
}
subkind Event_Plan_Category (instanceOf Event_Plan) specializes Category
roleMixin Venue  specializes Place
quality Geometry {
    coordinate : Coordinate [1..*] 
    @characterization
     [1..*] -- [1]  Geospatial_Feature( {const } geospatial_feature )
}
subkind Polygon  specializes Geometry
subkind Line_String  specializes Geometry
subkind Point  specializes Geometry
category Place  specializes Geospatial_Feature, Named_Entity{
    address : Address
    how_to_arrive : string
    opening_hours : Hours Specification [1..*] 
    @material
    [*] -- [*]  Place
}
subkind Event_Series (instanceOf Event_Plan) specializes Event_Plan_Category, Named_Entity{
    frequency : undefined
    @instantiation
    [*] --  [0..*]  Event_Series_Category( {derived } category )
}
datatype Contact_Point {
    telephone : string
    email : string
    address : Address
    available_hours : Hours Specification
}
datatype Hours_Specification {
    day_of_week : Day of Week
    valid_from : Time Instant
    valid_to : Time Instant
}
kind Lift  specializes Place, Named_Entity{
    capacity : int
    persons_per_chair : int
    @componentOf
     [1..*]  --<o>  [1..*]  Mountain_Area
    @instantiation
    [*] --  [0..*]  Lift_Category( {derived } category )
}
kind Trail  specializes Place{
    @componentOf
     [1..*]  --<o>  [1..*]  Mountain_Area
    @instantiation
    [*] --  [0..*]  Trail_Category( {derived } category )
}
category Named_Entity {
    abstract : string
    description : string
    name : string
    short_name : string
    url : string
    @instantiation
    [*] --  [0..*]  Category
    @material
     [0..*] --  [0..*]  Feature
}
subkind Snowpark  specializes Trail, Named_Entity{
    @material
     [0..*] --  [0..*]  Snowpark_Feature( {derived } presents_feature )
    @instantiation
    [*] --  [0..*]  Snowpark_Category( {derived } category )
}
kind Mountain_Area  specializes Place, Named_Entity{
    @material
     [1..*] --  [1..*]  Area_Owner
    @instantiation
    [*] --  [0..*]  Mountain_Area_Category( {derived } category )
    @componentOf
     [2..*]  --<o>  [0..1]  Composite_Area
}
subkind Lift_Category (instanceOf Lift) specializes Category
subkind Trail_Category (instanceOf Trail) specializes Category
subkind Snowpark_Feature  specializes Feature
enum EU_Difficulty {
    Novice,
    Beginner,
    Intermediate,
    Expert
}
enum US_Difficulty {
    Beginner,
    Beginner_Intermediate,
    Intermediate,
    Intermediate_Advanced,
    Advanced,
    Expert,
    TerrainPark
}
datatype Coordinate {
    longitude : float
    latitude : float
    elevation : float
}
relator Snow_Measurement  specializes Geospatial_Feature{
    obtained_in : Time Instant
    base_snow : int
    base_snow_range : undefined
    storm_total : int
    snow_over_night : int
    groomed : boolean
    snow_making : boolean
    @mediation
    [*] -- [1]  Agent( {const } measurement_author )
    @mediation
    [*] --  [1..*]  Place( {const } measurement_place )
    @mediation
    [*] -- [1]  Snow_Type( {const } secondary_surface )
    @mediation
    [*] -- [1]  Snow_Type( {const } primary_surface )
}
type Snow_Type 
phaseMixin Operational  specializes Place
phaseMixin Closed  specializes Place
phaseMixin Permanently_Closed  specializes Place
enum Snowpark_Difficulty {
    S,
    M,
    L,
    XL
}
roleMixin Area_Owner  specializes Agent
subkind Composite_Area  specializes Mountain_Area
subkind SimpleArea  specializes Mountain_Area
subkind Ski_Slope  specializes Trail, Named_Entity{
    @instantiation
    [*] --  [0..*]  Ski_Slope_Category( {derived } category )
}
kind Audio_Object  specializes Media_Object{
    duration : Time Interval
}
type License_Type 
roleMixin License_Holder  specializes Agent
subkind Media_Object_Category (instanceOf Media_Object) specializes Category
datatype Address {
    street : string
    city : string
    region : string
    country : string
    category : string
    zipcode : string
    complement : string
}
datatype Time_Instant
datatype Time_Interval
datatype Time
datatype Frequency
subkind MultiPoint  specializes Geometry
subkind Multi_Line_String  specializes Geometry
subkind MultiPolygon  specializes Geometry
enum Day_of_Week {
    Sunday,
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday
}
datatype Range {
    lower : int
    upper : int
}
phase Published  specializes Event_Plan
subkind Mountain_Area_Category (instanceOf Mountain_Area) specializes Category
quality Difficulty {
    @characterization
    [1] -- [1]  Trail( {const } dificulty_of )
}
type Category (instanceOf Named_Entity) specializes Named_Entity{
    [*] <>-- [*]  Category
}
type Feature  specializes Named_Entity{
    [*]  --<o> [*]  Feature
}
roleMixin Author  specializes Agent
subkind Ski_Slope_Category (instanceOf Ski_Slope) specializes Category
subkind Snowpark_Category (instanceOf Snowpark) specializes Category
subkind Event_Series_Category (instanceOf Event_Series) specializes Category
phase Virtual_Event  specializes Event_Plan
phase InPerson_Event  specializes Event_Plan
phase Hybrid_Event  specializes Event_Plan
kind Streaming_Platform 
collective Target_Audience 

