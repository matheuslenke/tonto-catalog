import Banking

package Model

subkind ATM of functional-complexes  specializes Device 

relator Access

relator Accessed_Account specializes Account {
    @mediation 
    [1..*] -- belongs_to -- [1] Client 
    @mediation 
    [1..*] -- mantains -- [1] Bank 
    @derivation 
    [1] -- [1] Client_Organization.has 
}

role Accessing_Device of functional-complexes  specializes Device 

relator Account

relator Active_Account specializes Account {
    @mediation 
    [1..*] -- belongs_to -- [1] Client 
    @mediation 
    [1..*] -- mantains -- [1] Bank 
    @derivation 
    [1] -- [1] Client_Organization.has 
}

subkind Bank of functional-complexes  specializes Organization 

roleMixin Client of functional-complexes 

role Client_Organization of functional-complexes  specializes Client, Organization {
    @material 
    [1..*] -- has -- [1..*] Bank 
}

role Client_Person of functional-complexes  specializes Client, Person {
    @material 
    [1..*] -- has -- [1..*] Bank 
}

kind Device specializes Spatial_Entity 

collective Group_of_Organizations

relator Inactive_Account specializes Account {
    @mediation 
    [1..*] -- belongs_to -- [1] Client 
    @mediation 
    [1..*] -- mantains -- [1] Bank 
    @derivation 
    [1] -- [1] Client_Organization.has 
}

mode Location{
    latitude: undefined  
    longitude: undefined  
}

subkind Mobile of functional-complexes  specializes Device 

kind Organization

subkind Organization_Member of functional-complexes  specializes Organization 

subkind PC of functional-complexes  specializes Device 

kind Person

category Spatial_Entity of functional-complexes 

relator Withdraw{
    value_: undefined  
}

relator Withdrawed_Account specializes Account {
    @mediation 
    [1..*] -- belongs_to -- [1] Client 
    @mediation 
    [1..*] -- mantains -- [1] Bank 
    @derivation 
    [1] -- [1] Client_Organization.has 
}

role Withdrawing_ATM of functional-complexes  specializes ATM 

