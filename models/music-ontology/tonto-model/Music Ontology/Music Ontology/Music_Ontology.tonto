package Music_Ontology

kind Written_Representation 
subkind Full_Score  specializes Written_Representation
subkind Sketch  specializes Written_Representation
subkind Part  specializes Written_Representation
subkind Music_Work  specializes Art_Work{
    identifier : undefined
    @material
    [1] -- soruce --  [1..*]  Written_Representation
}
subkind Ballet  specializes Music_Work
subkind Opera  specializes Music_Work
subkind Orchestral_Work  specializes Music_Work
subkind Suite  specializes Music_Work
subkind Overture  specializes Orchestral_Work
subkind Symphony  specializes Orchestral_Work
subkind Symphonic_Poem  specializes Orchestral_Work
role Suite_Short_Moviment  specializes Short_Moviment{
    @componentOf
    ( {const } redefines_moviment ) [2..*]  --<o> [1]  Suite
}
phase Short_Moviment  specializes Individual_Moviment
phase Long_Moviment  specializes Individual_Moviment
kind Moviment {
    duration : undefined
    time_plus_measure : undefined
    @componentOf
     [2..*]  --<o> [1]  Composite_Moviment
}
subkind Individual_Moviment  specializes Moviment
subkind Composite_Moviment  specializes Moviment
phase Dancelike_Moviment  specializes Individual_Moviment
phase Slow_Moviment  specializes Individual_Moviment
phase Fast_Moviment  specializes Individual_Moviment
kind Art_Work {
    @componentOf
     [2..*]  --<o> [1]  Oeuvre
}
datatype Key
relator Publishment {
    @mediation
    [1] -- [1]  Full_Score( {const } )
    @mediation
    [1] -- [1]  Music_Work( {const } )
    @mediation
     [1..*] -- [1]  Publisher( {const } )
}
relator Artistic_Composition {
    completion : undefined
    @mediation
    [1] -- [1]  Art_Work( {const } art )
    @mediation
     [1..*] --  [1..*]  Composer( {const } composer )
}
relator Musical_Composition  specializes Artistic_Composition{
    @mediation
     [1..*] --  [1..*]  Music_Composer( {const } subsets_composer )
}
role Music_Composer  specializes Composer
role Composer  specializes Artist
mixin Artist {
    @formal
    [1] -- body_of_work -- [1]  Oeuvre
}
role Individual_Artist  specializes Artist, Person, Artistic_Member
kind Person {
    name : undefined
}
kind Software_Program  specializes Artist
role Publisher  specializes Person
kind Oeuvre 
role Member  specializes Person{
    @memberOf
     [2..*]  --<o> [1]  Group( {const } )
}
collective Group 
subkind Artistic_Group  specializes Group, Artist
subkind Musical_Group  specializes Artistic_Group
role Musical_Member  specializes Artistic_Member{
    @memberOf
     [2..*]  --<o> [1]  Musical_Group( {const } )
}
role Artistic_Member  specializes Member{
    @memberOf
     [2..*]  --<o> [1]  Artistic_Group( {const } )
}
role Musician  specializes Individual_Artist, Musical_Member
subkind Orchestra  specializes Musical_Group

