import IT_Architecture

package Model

category IT_Component of functional-complexes 

kind Site specializes IT_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

category Platform of functional-complexes  specializes IT_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind System specializes IT_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Data_Storage specializes IT_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Service_Continuity

relator Replication

category IT_Architecture of functional-complexes 

category ITSC_Component of functional-complexes 

kind Site_Model specializes ITSC_Component {
    [1..*] -- [1] Service_Continuity 
}

kind Data_Replication specializes ITSC_Component {
    [1..*] -- [1] Service_Continuity 
}

category Resilient_Network of functional-complexes  specializes ITSC_Component {
    [1..*] -- [1] Service_Continuity 
}

kind Location

relator Installation

subkind Local of functional-complexes  specializes Location {
    [1] -- Installed_in -- [1] Site 
}

subkind Remote of functional-complexes  specializes Location {
    [1] -- Installed_in -- [1] Site 
}

role Online of functional-complexes  specializes Site {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

role Offline of functional-complexes  specializes Site {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

relator Incident

role Active of functional-complexes  specializes Online, Site {
    @material 
    [1] -- Suspension_of_Operation -- [1] Offline 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

role Backup of functional-complexes  specializes Offline, Site {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

role Contingency of functional-complexes  specializes Offline, Site {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

role Passive of functional-complexes  specializes Offline, Site {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

category Replication_Technology of functional-complexes 

kind Mirroring specializes Replication_Technology {
    [1..*] -- [1] Data_Replication 
}

kind Snapshot specializes Replication_Technology {
    [1..*] -- [1] Data_Replication 
}

kind Cluster specializes Replication_Technology {
    [1..*] -- [1] Data_Replication 
}

kind Appliance specializes Replication_Technology {
    [1..*] -- [1] Data_Replication 
}

kind RAID specializes Replication_Technology {
    [1..*] -- [1] Data_Replication 
}

subkind Synchronous of functional-complexes  specializes Mirroring {
    distance: undefined [1] 
    [1..*] -- [1] Data_Replication 
}

subkind Asynchronous of functional-complexes  specializes Mirroring {
    distance: undefined [1] 
    [1..*] -- [1] Data_Replication 
}

subkind Local_Replication of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind Remote_Replication of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind Media_BackupRestore of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind DBMSbased of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind Applicationbased of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind Hostbased of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

subkind Storagebased of functional-complexes  specializes Data_Replication {
    [1..*] -- [1] Service_Continuity 
}

kind Network_Component specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Cooling specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Power specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Warranty_And_Support specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Computer_System specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

kind Monitoring specializes Platform {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Peripheral of functional-complexes  specializes Computer_System {
    [1..*] -- failure -- [1..*] Monitoring 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Dual_Network_Device of functional-complexes  specializes Computer_System {
    [1..*] -- failure -- [1..*] Monitoring 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Cooling_Fan of functional-complexes  specializes Computer_System {
    [1..*] -- failure -- [1..*] Monitoring 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Redundant_Power_Supply of functional-complexes  specializes Computer_System {
    [1..*] -- failure -- [1..*] Monitoring 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Dual_Power_Inlet of functional-complexes  specializes Computer_System {
    [1..*] -- failure -- [1..*] Monitoring 
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Network_Provider of functional-complexes  specializes Network_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Physical_Media of functional-complexes  specializes Network_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Link of functional-complexes  specializes Network_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Telecom_Asset of functional-complexes  specializes Network_Component {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

relator Appropriate_Level_of_Warranty

relator Warning

subkind Monitoring_Software of functional-complexes  specializes Monitoring {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Management_Suite of functional-complexes  specializes Monitoring {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Power_Distributor of functional-complexes  specializes Power {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Bank_of_Battery of functional-complexes  specializes Power {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind Generator of functional-complexes  specializes Power {
    @material 
    [0..*] -- Single_Point_of_Failure_removal -- [0..*] Service_Continuity 
    [1..*] -- [1] IT_Architecture 
}

subkind UPS_Standby of functional-complexes  specializes UPS {
    [1] -- [1..*] Bank_of_Battery 
    [1] -- [1..*] Generator 
}

subkind UPS_Online of functional-complexes  specializes UPS {
    [1] -- [1..*] Bank_of_Battery 
    [1] -- [1..*] Generator 
}

relator Automatic_Switching

kind UPS

relator UPSBattery_Switching

relator UPSGenerator_Switching

