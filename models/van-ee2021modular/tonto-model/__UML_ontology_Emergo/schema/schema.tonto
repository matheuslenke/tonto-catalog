import BPO_ontology
import dice
import bpo

package schema

category ProductModel of functional-complexes 

quality PropertyValue{
    @material [1] -- qudtunit -- [1] Unit 
}

quality StructuredValue

quality value_

event Event{
    Description: string_  
    @material [0..*] -- schemaEventSchedule -- [0..*] Schedule 
    @material [0..*] -- schemaabout -- [0..*] Component 
    @material [0..*] -- schemalocation -- [0..*] Place 
    @material [0..*] -- schemasubEvent -- [0..*] Event 
    @material [0..*] -- schemaactor -- [0..*] person 
    @material [0..*] -- schemacontributor -- [0..*] organisation 
    @bringsAbout [1] -- dicehasActivity -- [1] activity 
}

kind Schedule{
    description: string_  
    id: string_  
    startDate: undefined  
    endDate: undefined  
    @material [0..*] -- schemasubjectOf -- [0..*] Event 
    @material [0..*] -- emgtransformSchedule -- [0..*] Schedule 
}

category Place of functional-complexes {
    description: string_  
    @material [0..*] -- schemasubjectOf -- [0..*] Event 
    @material [0..*] -- schemaaddress -- [0..*] postalAdress 
}

kind postalAdress{
    addressCountry: string_  
    addressLocality: string_  
    addressRegion: string_  
    postOfficeBoxNumber: string_  
    postalCode: string_  
    streetAddress: string_  
}

kind person specializes Agent {
    name: string_  
    email: string_  
    telephone: string_  
    jobTitle: string_  
    @material [0..*] -- schemaperformerIn -- [0..*] Event 
}

kind organisation specializes Agent {
    name: string_  
    id: string_  
    email: string_  
    telephone: string_  
    @material [0..*] -- schemaaddress -- [0..*] postalAdress 
    @material [0..*] -- schemasubjectOf -- [0..*] Event 
}

quality priceSpecification{
    price: string_  
    priceCurrency: string_  
    validFrom: undefined  
    validThrough: undefined  
    valueAddedTextIncluded: boolean_  
    @characterization [1] -- schemaeligibleQuantity -- [1] QuantitativeValue 
}

quality QuantitativeValue{
    value_: undefined  
    unitText: string_  
    unitCode: string_  
}

category WebAPI of functional-complexes {
    URL: string_  
    @material [0..*] -- schemadocumentation -- [0..*] creativeWork 
}

kind DigitalDocument specializes creativeWork {
    [*] -- schemahasDigitalDocumentPermission -- [*] DigitalDocumentPermission 
}

mode DigitalDocumentPermission

category creativeWork of functional-complexes {
    fileFormat: string_  
    @material [0..*] -- schemaabout -- [1] ClassifiedObject 
}

kind drawing specializes creativeWork 

class Property

class Agent

