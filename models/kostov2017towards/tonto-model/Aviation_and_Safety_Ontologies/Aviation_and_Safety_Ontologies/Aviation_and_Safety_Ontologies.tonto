
package Aviation_and_Safety_Ontologies

event Event

event Flight specializes Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Process specializes Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Reportable_Event specializes Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Action specializes Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Handling specializes Action {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

event Coordination specializes Action {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

event Use specializes Action {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

event Decision specializes Action {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

event Provision specializes Action {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

class Flight_Stage

event Landing

class Takeoff

event Approach

class Procedure specializes Regulation {
    [*] -- has_object_part -- [*] Object 
}

class Safety_Event specializes Reportable_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Deviation specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Collision specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Near_collision specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Warning_System_Alarm specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Loss_of_function specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

event Regulation_Violation_Event specializes Safety_Event {
    [0..*] -- has_participant -- [1..*] Object 
}

class Regulation specializes Object {
    [*] -- has_object_part -- [*] Object 
}

kind Agent specializes Object {
    [*] -- has_object_part -- [*] Object 
}

class Object

class Impact specializes Trope {
    [1..*] -- inheres_in -- [1] Object 
}

class Trope

class Damage specializes Impact {
    [*] -- is_impact_of -- [*] Safety_Event 
    [1..*] -- inheres_in -- [1] Object 
}

class Injury specializes Impact {
    [*] -- is_impact_of -- [*] Safety_Event 
    [1..*] -- inheres_in -- [1] Object 
}

class Service specializes Function {
    @material 
    [0..*] -- is_provided_to -- [0..*] Agent 
    [*] -- is_provided_by -- [*] Object 
    [*] -- has_object_part -- [*] Object 
}

class Function specializes Object {
    [*] -- has_object_part -- [*] Object 
}

category Technical_System of functional-complexes  specializes Object {
    [*] -- has_object_part -- [*] Object 
}

kind Organization specializes Agent {
    [*] -- perceive -- [*] Event 
    [*] -- has_object_part -- [*] Object 
}

kind Person specializes Agent {
    [*] -- perceive -- [*] Event 
    [*] -- has_object_part -- [*] Object 
}

class Aircraft_Part specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

kind Aircraft specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

class Aerodrome_part specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

role Aerodrome specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

kind Vehicle specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

kind Equipment specializes Technical_System {
    @material 
    [0..*] -- operates -- [0..*] Agent 
    [*] -- has_object_part -- [*] Object 
}

event Operation specializes Use {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

event Aerodromes_Operation specializes Operation {
    [*] -- is_performed_by -- [*] Agent 
    [0..*] -- has_participant -- [1..*] Object 
}

role Air_traffic_management of functional-complexes  specializes Agent {
    [*] -- perceive -- [*] Event 
    [*] -- has_object_part -- [*] Object 
}

kind Physical_Object

subkind Spatial_Object of functional-complexes  specializes Physical_Object 

role TransportObject of functional-complexes  specializes Spatial_Object 

role Flight_Participant of functional-complexes  specializes TransportObject 

role Crew of functional-complexes  specializes Flight_Participant 

event Incident

event Audit

event Audit_Finding

class Aviation_Safety_Event_Type specializes Term_Type 

class Taxonomy

type Term_Type

type Object_Type specializes Term_Type 

role Factor_Type specializes Aviation_Safety_Event_Type {
    [*] -- classified_by -- [*] Incident 
    [*] -- has_typical_factor -- [*] Factor_Type 
}

role Risk specializes Aviation_Safety_Event_Type {
    [*] -- classified_by -- [*] Incident 
    [*] -- has_typical_factor -- [*] Factor_Type 
}

role Incident_Type specializes Aviation_Safety_Event_Type {
    [*] -- classified_by -- [*] Incident 
    [*] -- has_typical_factor -- [*] Factor_Type 
}

