import Complementary_Categorizations
import Transport_Functions
import Forwarding_End_Points

package Equipment

role Bound_Input_Interface  specializes Input_Interface
role Bound_Output_Interface  specializes Output_Interface
role Connected_Input_Interface  specializes Input_Interface
role Connected_Output_Interface  specializes Output_Interface{
    @material
     [1..*] -- interface_connects --  [1..*]  Connected_Input_Interface
}
kind Equipment 
role Equipment_Site_Component  specializes Site_Component_Equipment{
    @componentOf
    ( {const } composed ) [2..*]  --<o> [1]  Multiple_Equipment_Composed_Site( {const } compose )
}
kind Input_Interface {
    @componentOf
    ( {const } composedInpInt ) [1..*]  --<o> [1]  Equipment( {const } compose )
}
role Mapped_Input_Interface  specializes Input_Interface{
    @formal
    [1] -- maps_input -- [1]  Mapped_TF_Input
}
role Mapped_Output_Interface  specializes Output_Interface{
    @formal
    [1] -- maps_output -- [1]  Mapped_TF_Output
}
roleMixin Mapped_TF_Input  specializes Input
roleMixin Mapped_TF_Output  specializes Output
role Multiple_Equipment_Composed_Site  specializes Equipment_Composed_Site
kind Output_Interface {
    @componentOf
    ( {const } composed ) [1..*]  --<o> [1]  Equipment( {const } compose )
}
role Single_Equipment_Site  specializes Equipment_Composed_Site{
    @formal
    [1] -- represents -- [1]  Single_Equipment_Site_Component
}
role Single_Equipment_Site_Component  specializes Site_Component_Equipment
role Sink_Site  specializes Site
kind Site 
role Source_Site  specializes Site{
    @material
     [1..*] -- site_connects --  [1..*]  Sink_Site
}
roleMixin Transport_Function_Equipment_Component  specializes Transport_Function{
    @componentOf
    ( {const } ) [1..*]  --<o> [1]  Equipment( {const } compose )
}
role Bound_Input_Interface_Equipment  specializes Bound_Input_Interface
role Bound_Output_Interface_Equipment  specializes Bound_Output_Interface{
    @material
    [1] -- interface_binds -- [1]  Bound_Input_Interface_Equipment
}
role Bound_Input_Interface_PM  specializes Bound_Input_Interface{
    @material
    [1] -- binds_PM_in_interface -- [1]  PM_Interface_Bound_Output
}
role PM_Interface_Bound_Input  specializes PM_Input__So_PMFEP_Bound
role Bound_Output_Interface_PM  specializes Bound_Output_Interface{
    @material
    [1] -- binds_PM_out_interface -- [1]  PM_Interface_Bound_Input
}
role PM_Interface_Bound_Output  specializes PM_Output__Sk_PMFEP_Bound
role Equipment_Composed_Site  specializes Site{
    @formal
    [1] -- has_equipment --  [1..*]  Site_Component_Equipment
}
role Site_Component_Equipment  specializes Equipment
kind Module {
    @componentOf
    ( {const } ) [1..*]  --<o> [1]  Equipment( {const } )
}
roleMixin Transport_Function_Module_Component  specializes Transport_Function{
    @componentOf
    ( {const } ) [1..*]  --<o> [1]  Module( {const } )
}
kind Module_Input_Interface {
    @componentOf
    ( {const } ) [1..*]  --<o> [1]  Module( {const } )
}
kind Module_Output_Interface {
    @componentOf
    ( {const } ) [1..*]  --<o> [1]  Module( {const } )
}
roleMixin Module_Mapped_TF_Input  specializes Input
roleMixin Module_Mapped_TF_Output  specializes Output
role Mapped_Module_Input_Interface  specializes Module_Input_Interface{
    @formal
    [1] -- interface_maps_tf_input -- [1]  Module_Mapped_TF_Input
}
role Mapped_Module_Output_Interface  specializes Module_Output_Interface{
    @formal
    [1] -- interface_maps_tf_output -- [1]  Module_Mapped_TF_Output
}
role Equipment_Composed_of_Modules  specializes Equipment

