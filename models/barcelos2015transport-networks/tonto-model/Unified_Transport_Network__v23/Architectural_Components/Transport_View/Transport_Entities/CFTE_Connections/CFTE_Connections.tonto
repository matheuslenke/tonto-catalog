import Forwarding_Function
import Forwarding_End_Points
import Complementary_Categorizations
import Forwarding_Points
import Transport_Entities

package CFTE_Connections

role Active_End_Bidirectional_SNFEP  specializes Bidirectional_SNFEP, Connected_Reference_Point
role Active_Intermediate_Bidirectional_SNFP  specializes Bidirectional_SNFP, Connected_Reference_Point
role Active_Path_Bidirectional_SNFEP  specializes Bidirectional_SNFEP, Connected_Reference_Point
role Active_Path_Bidirectional_SNFP  specializes Bidirectional_SNFP, Connected_Reference_Point
role Active_Sk_SNFEP__End_CFTE_connected  specializes Sink_SNFEP, Connected_Reference_Point
role Active_Sk_SNFEP__Sk_CFTE_connected  specializes Sink_SNFEP, Connected_Reference_Point{
    @material
     [1..*] -- Forwarding_Sink_CFTE --  [1..*]  Active_Sk_SNFP__Sk_CFTE_connected
}
role Active_Sk_SNFP__Int_CFTE_connected  specializes Sink_SNFP, Connected_Reference_Point{
    @material
     [1..*] -- Forwarding_Int_CFTE --  [1..*]  Active_So_SNFP__Int_CFTE_connected
}
role Active_Sk_SNFP__Sk_CFTE_connected  specializes Sink_SNFP, Connected_Reference_Point
role Active_So_SNFEP__End_CFTE_connected  specializes Source_SNFEP, Connected_Reference_Point{
    @material
     [1..*] -- Forwarding_End_CFTE --  [1..*]  Active_Sk_SNFEP__End_CFTE_connected
}
role Active_So_SNFEP__So_CFTE_connected  specializes Source_SNFEP, Connected_Reference_Point{
    @material
     [1..*] -- Forwarding_Source_CFTE --  [1..*]  Active_So_SNFP__So_CFTE_connected
}
role Active_So_SNFP__Int_CFTE_connected  specializes Source_SNFP, Connected_Reference_Point
role Active_So_SNFP__So_CFTE_connected  specializes Source_SNFP, Connected_Reference_Point
subkind Bi_End_CFTE  specializes Bidirectional_CFTE{
    @material
     [1..*] -- Forwarding_Bidirectional_End_CFTE -- [2]  Active_End_Bidirectional_SNFEP
}
subkind Bi_Intermediate_CFTE  specializes Bidirectional_CFTE{
    @material
     [1..*] -- Forwarding_Bidirectional_Int_CFTE -- [2]  Active_Intermediate_Bidirectional_SNFP
}
subkind Bi_Path_CFTE  specializes Bidirectional_CFTE{
    @material
     [1..*] -- Forwarding_Bidirectional_Path_CFTE_FP -- [1]  Active_Path_Bidirectional_SNFP
    @material
     [1..*] -- Forwarding_Bidirectional_Path_CFTE_FEP -- [1]  Active_Path_Bidirectional_SNFEP
}
subkind Bidirectional_CFTE  specializes Channel_Forwarding_Transport_Entity
kind Channel_Forwarding_Transport_Entity  specializes Transport_Entity
subkind End_CFTE  specializes Unidirectional_CFTE
role End_CFTE_Bi_Component  specializes End_CFTE{
    @componentOf
    ( {const } isComposed )[2]  --<o> [1]  Bi_End_CFTE( {const } composeBES )
}
relator End_Forwarding  specializes Forwarding{
    @mediation
    [1] -- is_represented_by_End_CFTE -- [1]  End_CFTE( {const } isRepresentedBy )
    @mediation
     [1..*] -- Forwarding_from_End_CFTE -- [1]  Active_So_SNFEP__End_CFTE_connected( {const } transfersSo )
    @mediation
     [1..*] -- Forwarding_to_End_CFTE -- [1]  Active_Sk_SNFEP__End_CFTE_connected( {const } transfersSk )
    @mediation
    [1] -- is_configured_by -- [1]  Forwarding_Function_CFTE_SoSk( {const } )
}
relator Int_CFTE_Forwarding  specializes Forwarding{
    @mediation
    [1] -- is_represented_by_Intermediate_CFTE -- [1]  Intermediate_CFTE( {const } isRepresentedBy )
    @mediation
     [1..*] -- Forwarding_to_Intermediate_CFTE -- [1]  Active_So_SNFP__Int_CFTE_connected( {const } transfersSo )
    @mediation
     [1..*] -- Forwarding_from_Intermediate_CFTE -- [1]  Active_Sk_SNFP__Int_CFTE_connected( {const } transfersSk )
    @mediation
    [1] -- is_configured_by -- [1]  Forwarding_Function_CFTE_SkSo( {const } )
}
subkind Intermediate_CFTE  specializes Unidirectional_CFTE
role Intermediate_CFTE_Bi_Component  specializes Intermediate_CFTE{
    @componentOf
    ( {const } isComposed )[2]  --<o> [1]  Bi_Intermediate_CFTE( {const } composeBIS )
}
subkind Sink_CFTE  specializes Unidirectional_CFTE
role Sink_CFTE_Bi_Component  specializes Sink_CFTE{
    @componentOf
    ( {const } isComposedSk )[1]  --<o> [1]  Bi_Path_CFTE( {const } composeBPS )
}
relator Sk_CFTE_Forwarding  specializes Forwarding{
    @mediation
    [1] -- is_represented_by_Sink_CFTE -- [1]  Sink_CFTE( {const } isRepresented )
    @mediation
     [1..*] -- Forwarding_to_Sink_CFTE -- [1]  Active_Sk_SNFP__Sk_CFTE_connected( {const } transfersSncp )
    @mediation
     [1..*] -- Forwarding_from_Sink_CFTE -- [1]  Active_Sk_SNFEP__Sk_CFTE_connected( {const } transfersSntcp )
    @mediation
    [1] -- is_configured_by -- [1]  Forwarding_Function_CFTE_Sk( {const } )
}
relator So_CFTE_Forwarding  specializes Forwarding{
    @mediation
    [1] -- is_represented_by_Source_CFTE -- [1]  Source_CFTE( {const } isRepresented )
    @mediation
     [1..*] -- Forwarding_to_Source_CFTE -- [1]  Active_So_SNFP__So_CFTE_connected( {const } transfers )
    @mediation
     [1..*] -- Forwarding_from_Source_CFTE -- [1]  Active_So_SNFEP__So_CFTE_connected( {const } transfersTCP )
    @mediation
    [1] -- is_configured_by -- [1]  Forwarding_Function_CFTE_So( {const } )
}
subkind Source_CFTE  specializes Unidirectional_CFTE
role Source_CFTE_Bi_Component  specializes Source_CFTE{
    @componentOf
    ( {const } isComposedSo )[1]  --<o> [1]  Bi_Path_CFTE( {const } composeBPS )
}
subkind Unidirectional_CFTE  specializes Channel_Forwarding_Transport_Entity
disjoint complete genset CtxVwn6AUBAIKD6l{
    general Unidirectional_CFTE
    specifics Source_CFTE, Intermediate_CFTE, End_CFTE, Sink_CFTE 
}
disjoint complete genset iVZVwn6AUBAIKD6x{
    general Channel_Forwarding_Transport_Entity
    specifics Unidirectional_CFTE, Bidirectional_CFTE 
}
disjoint complete genset 4Q9Vwn6AUBAIKD7j{
    general Bidirectional_CFTE
    specifics Bi_Path_CFTE, Bi_Intermediate_CFTE, Bi_End_CFTE 
}

