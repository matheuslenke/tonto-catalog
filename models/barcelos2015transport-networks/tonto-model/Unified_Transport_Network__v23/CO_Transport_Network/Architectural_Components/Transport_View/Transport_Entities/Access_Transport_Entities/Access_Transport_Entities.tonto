import Complementary_Categorizations
import Transport_Entities
import Access_Points

package Access_Transport_Entities

relator AP_Forwarding specializes Forwarding {
    @mediation [1] -- is_represented_by_Uni_Access_Transport_Entity -- [1] Unidirectional_Access_Transport_Entity 
    @mediation [1..*] -- Forwarding_from_Uni_Access_Transport_Entity -- [1] Active_Source_AP 
    @mediation [1..*] -- Forwarding_to_Uni_Access_Transport_Entity -- [1] Active_Sink_AP 
}

kind Access_Transport_Entity specializes Transport_Entity 

role Active_Bidirectional_AP of functional-complexes  specializes Bidirectional_AP, Connected_Reference_Point 

role Active_Sink_AP of functional-complexes  specializes Sink_AP, Connected_Reference_Point 

role Active_Source_AP of functional-complexes  specializes Source_AP, Connected_Reference_Point {
    @material [1..*] -- Forwarding_Unidirectional_Access_Transport_Entity -- [1..*] Active_Sink_AP 
}

subkind Bidirectional_Access_Transport_Entity of functional-complexes  specializes Access_Transport_Entity {
    @material [1..*] -- Forwarding_Bidirectional_Access_Transport_Entity -- [2] Active_Bidirectional_AP 
}

subkind Unidirectional_Access_Transport_Entity of functional-complexes  specializes Access_Transport_Entity 

role Unidirectional_Access_Transport_Entity_Bidirectional_Component of functional-complexes  specializes Unidirectional_Access_Transport_Entity {
    @componentOf [2] -- [1] Bidirectional_Access_Transport_Entity 
}

genset Yyuon6AUBAIKEly {
    general Access_Transport_Entity
    specifics Bidirectional_Access_Transport_Entity, Unidirectional_Access_Transport_Entity
}

