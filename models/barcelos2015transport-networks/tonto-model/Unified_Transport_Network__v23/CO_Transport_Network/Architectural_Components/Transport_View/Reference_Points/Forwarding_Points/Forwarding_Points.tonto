import Unified_Transport_Network__v23

package Forwarding_Points

role A_Sk_Output__AFP_Bound of functional-complexes  specializes Adaptation_Sink_Output, Possible_Ingress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Sink 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role A_Sk_Output__Sk_LPFP_Bound of functional-complexes  specializes Adaptation_Sink_Output {
    @componentOf 
    [1..*] -- [1] Adaptation_Sink 
}

role A_Sk_Output__Sk_MFP_Bound of functional-complexes  specializes Adaptation_Sink_Output, Possible_Egress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Sink 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role A_Sk_Output__Sk_SNFP_Bound of functional-complexes  specializes Adaptation_Sink_Output, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Sink 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role A_So_Input__AFP_Bound of functional-complexes  specializes Adaptation_Source_Input, Possible_Egress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Source 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role A_So_Input__So_LFP_Bound of functional-complexes  specializes Adaptation_Source_Input {
    @componentOf 
    [1..*] -- [1] Adaptation_Source 
}

role A_So_Input__So_MFP_Bound of functional-complexes  specializes Adaptation_Source_Input, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Source 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role A_So_Input__So_SNFP_Bound of functional-complexes  specializes Adaptation_Source_Input, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Adaptation_Source 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

category AFP of functional-complexes  specializes Forwarding_Point 

relator AFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

kind Bidirectional_AFP specializes AFP, Possible_Bi_LC_Connected_RP 

kind Bidirectional_LPFP

kind Bidirectional_MFP specializes MFP, Possible_Bi_LC_Connected_RP 

kind Bidirectional_SNFP specializes SNFP, Possible_Bi_LC_Connected_RP 

category Forwarding_Point of functional-complexes  specializes Reference_Point 

role LP_Input__Sk_LPFP_Bound of functional-complexes  specializes Layer_Processor_Sink_Input, Possible_Egress_LC {
    @componentOf 
    [1] -- [1] Layer_Processor_Function_Sink 
}

category LPFP of functional-complexes  specializes Forwarding_Point 

role LPF_Output__So_LFP_Bound of functional-complexes  specializes Layer_Processor_Source_Output, Possible_Ingress_LC {
    @componentOf 
    [1] -- [1] Layer_Processor_Function_Source 
}

role M_Input__Sk_MFP_Bound of functional-complexes  specializes Matrix_Input, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Unidirectional_Matrix 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role M_Output__So_MFP_Bound of functional-complexes  specializes Matrix_Output, Possible_Ingress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Unidirectional_Matrix 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

category MFP of functional-complexes  specializes Forwarding_Point 

role SN_Intput__Sk_SNFP_Bound of functional-complexes  specializes Subnetwork_Input, Possible_Egress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Unidirectional_Subnetwork 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

role SN_Outtput__So_SNFP_Bound of functional-complexes  specializes Subnetwork_Output, Possible_Ingress_LC, Bound_InputOutput {
    @componentOf 
    [1..*] -- [1] Unidirectional_Subnetwork 
    @material 
    [1] -- binds -- [1] Bound_InputOutput 
}

category SNFP of functional-complexes  specializes Forwarding_Point 

kind Sink_LPFP specializes LPFP, Possible_LC_Connected_RP 

role Sink_LPFP_Bi_Component of functional-complexes  specializes Sink_LPFP 

relator Sink_LPFP_Binding

kind Sink_MFP specializes MFP, Possible_LC_Connected_RP 

role Sink_MFP_Bi_Component of functional-complexes  specializes Sink_MFP 

relator Sink_MFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

kind Sink_SNFP specializes SNFP, Possible_LC_Connected_RP 

role Sink_SNFP_Bi_Component of functional-complexes  specializes Sink_SNFP 

relator Sink_SNFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

relator Source_LFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

kind Source_LPFP specializes LPFP, Possible_LC_Connected_RP 

role Source_LPFP_Bi_Component of functional-complexes  specializes Source_LPFP 

kind Source_MFP specializes MFP, Possible_LC_Connected_RP 

role Source_MFP_Bi_Component of functional-complexes  specializes Source_MFP 

relator Source_MFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

kind Source_SNFP specializes SNFP, Possible_LC_Connected_RP 

role Source_SNFP_Bi_Component of functional-complexes  specializes Source_SNFP 

relator Source_SNFP_Binding specializes Binding {
    @mediation 
    [1..*] -- is_binding -- [2] Bound_InputOutput 
    @mediation 
    [1] -- binding_is_represented_by -- [1] Directly_Bound_Reference_Point 
}

role Uni_AFP_Bi_Component of functional-complexes  specializes Unidirectional_AFP 

kind Unidirectional_AFP specializes AFP, Possible_LC_Connected_RP 

