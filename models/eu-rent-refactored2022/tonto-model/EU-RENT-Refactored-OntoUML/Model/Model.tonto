package Model

kind Person {
    gender : undefined
    parentalRole : undefined
    seniority : undefined
    statusAgePhase : undefined
}
subkind Man  specializes Person
subkind Woman  specializes Person
role Spouse  specializes Person{
    @material
    [1] -- is_married_to -- [1]  Spouse
}
relator Marriage {
    @mediation
    [1] -- involves_spouse -- [2]  Spouse( {const } )
}
phase Living_Person  specializes Person
phase Deceased_Person  specializes Person
phase Infant  specializes Living_Person
phase Teenage  specializes Living_Person
phase Adult  specializes Living_Person
roleMixin Customer 
role Personal_Customer  specializes Customer, Driver
subkind Licensing_Authority  specializes Governmental_Agency{
    @material
     [1..*] -- issues_driver_license_for -- [*]  Driver
}
relator Drivers_License {
    [*] -- issued_by -- [1]  Licensing_Authority( {const } )
     [1..*] -- granted_to -- [1]  Driver( {const } )
}
role Driver  specializes Adult, Insurable_Item
kind Organization  specializes Insurable_Item{
    type_ : undefined
    @material
    [1] -- owns -- [*]  Website
}
subkind Governmental_Agency  specializes Organization
subkind Car_Agency  specializes Organization{
    @material
    [1] -- owns --  [1..*]  Car
}
kind Car  specializes Insurable_Item{
    function_ : undefined
    status : undefined
}
relator Car_Ownership {
    @mediation
     [1..*] -- involves_owner -- [1]  Car_Agency( {const } )
    @mediation
    [1] -- involves_property -- [1]  Car( {const } )
}
role Corporate_Customer  specializes Customer, Organization
phase Car_Needing_Maintenance  specializes Car
phase Car_Needing_Repair  specializes Car
phase Functional_Car  specializes Car
subkind Organization_Unit  specializes Organization
subkind Service_Depot  specializes Organization_Unit
role Car_Scheduled_for_Maintenance  specializes Car_Needing_Maintenance{
    @material
    [*] -- is_scheduled_for_maintenance_at --  [1..*]  Service_Depot
}
role Car_Scheduled_for_Repair  specializes Car_Needing_Repair{
    @material
    [*] -- is_scheduled_for_repair_at --  [1..*]  Service_Depot
}
relator Maintenance_Appointment {
    @mediation
    [*] -- involves_service_depot -- [1]  Service_Depot( {const } )
    @mediation
     [1..*] -- involves_car -- [1]  Car_Scheduled_for_Maintenance( {const } )
}
relator Repair_Appointment {
    @mediation
    [*] -- involves_service_depot -- [1]  Service_Depot( {const } )
    @mediation
     [1..*] -- involves_car -- [1]  Car_Scheduled_for_Repair( {const } )
}
relator Car_Rental_Agreement  specializes Insurable_Item{
    @mediation
     [1..*] -- involves_customer -- [1]  Customer( {const } )
    @mediation
    [*] -- involves_car -- [1]  Functional_Car( {const } functional_Car )
}
phase Active_Car_Rental_Agreement  specializes Car_Rental_Agreement
phase Extented_Car_Rental_Agreement  specializes Car_Rental_Agreement
phase Closed_Car_Rental_Agreement  specializes Car_Rental_Agreement
role Car_Rental_Agreement_Closed_With_Damage  specializes Closed_Car_Rental_Agreement{
    @material
     [1..*] -- invovles_rental_car -- [1]  Car_Returned_with_Damage
}
relator Damage_Report {
    @mediation
    [1] -- involves_car_rental -- [1]  Car_Rental_Agreement_Closed_With_Damage( {const } )
    @mediation
     [1..*] -- involves_car -- [1]  Car_Returned_with_Damage( {const } )
}
subkind Branch  specializes Organization_Unit
role Transferred_Car  specializes Car
relator Transfer_Agreement {
    @mediation
     [1..*] -- involves_car -- [1]  Transferred_Car( {const } )
    @mediation
     [1..*] -- transfers_car_to -- [1]  Receiver_Branch( {const } )
    @mediation
     [1..*] -- transfers_car_from -- [1]  Sender_Branch( {const } )
}
role Car_Returned_with_Damage  specializes Car
phase Valid_Drivers_LIcense  specializes Drivers_License
phase Expired_Drivers_License  specializes Drivers_License
mixin Insurable_Item 
subkind Passenger_Car  specializes Car
subkind Cargo_Car  specializes Car
relator Rental_Insurance  specializes Insurance{
    @mediation
     [0..1] -- is_valid_for -- [1]  Car_Rental_Agreement( {const } )
    @mediation
     [1..*] -- protects -- [1]  Insured_Driver( {const } )
}
role Insurance_Company  specializes Organization{
    @material
    [*] -- insures --  [1..*]  Insurable_Item
}
role Insured_Driver  specializes Driver
kind Website {
    status : undefined
}
phase Online_Website  specializes Website
phase Offline_Website  specializes Website
relator Website_Ownership {
    @mediation
    [*] -- involves_owner -- [1]  Organization( {const } )
    @mediation
    [1] -- involves_property -- [1]  Website( {const } )
}
role Sender_Branch  specializes Branch
role Receiver_Branch  specializes Branch
relator Insurance {
    @mediation
    [*] -- protects -- [1]  Insurable_Item( {const } insurable_Item )
    @mediation
     [1..*] -- involves_insuror -- [1]  Insurance_Company( {const } )
}
role Car_Manufacturer  specializes Organization{
    @material
    [1] -- produces --  [1..*]  Car
}
relator Car_Production {
    @mediation
    [1] -- involves_product -- [1]  Car( {const } )
    @mediation
     [1..*] -- involves_manufacturer -- [1]  Car_Manufacturer( {const } )
}
role Employee  specializes Person{
    @material
    [*] -- works_at -- [1]  Organization
}
role Trainee  specializes Employee
role Junior_Employee  specializes Employee
role Midlevel_Employee  specializes Employee
role Senior_Employee  specializes Employee
relator Employment_Contract {
    @mediation
    [*] -- involves_employer -- [1]  Organization( {const } )
    @mediation
    [1] -- involves_employee -- [1]  Employee( {const } )
}
role Parent  specializes Person{
    @material
     [1..2] -- is_parent_of --  [1..*]  Child
}
role Child  specializes Person
relator Legal_Parenthood {
    @mediation
     [1..*] -- involves_parent -- [1]  Parent( {const } )
    @mediation
     [1..2] -- involves_child -- [1]  Child( {const } )
}

